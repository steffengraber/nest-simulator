#
# detailed syntax defined in
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#
name: "Full doc build"

on: [push, pull_request]

jobs:
    sphinx_nest_full:
        # as close as possible to the Readthedocs setup (system install cmake, pip install -r doc/requirements.txt)
        runs-on: "ubuntu-22.04"
        needs: []
        env:
            CI_FULL_DOC: ON
        strategy:
          fail-fast: false
        steps:
          - name: "Checkout repository content"
            uses: actions/checkout@v3
            with:
              fetch-depth: 0
    
          - name: "Set up Python 3.x"
            uses: actions/setup-python@v4
            with:
              # Using 3.8 because Read the docs does not work with higher versions.
              # See also: https://github.com/nest/nest-simulator/pull/2744
              python-version: 3.8
    
          - name: "Install dependencies"
            run: |
              sudo apt update
              sudo apt upgrade -y && \
              sudo apt install -y --no-install-recommends \
              build-essential libtool automake autotools-dev libreadline8 libreadline-dev freeglut3-dev \
                cmake \
                cython3 \
                jq \
                libboost-dev \
                libgomp1 \
                libgsl-dev \
                libhdf5-dev \
                libltdl7 \
                libltdl-dev \
                libmusic1v5 \
                libncurses-dev \
                libopenmpi-dev \
                libomp-dev \
                libpcre3 \
                libpcre3-dev \
                libpython3.10 \
                libreadline-dev \
                libzmq3-dev \
                llvm-dev \
                openmpi-bin \
                pandoc \
                pep8 \
                python3-dev \
                python3-h5py \
                python3-ipython \
                python3-jupyter-core \
                python3-matplotlib \
                python3-mpi4py \
                python3-nose \
                python3-numpy \
                python3-pandas \
                python3-path \
                python3-pip \
                python3-scipy \
                python3-setuptools \
                python3-sphinx \
                python3-statsmodels \
                python3-tk \
                vera++ \
                wget && \
                update-alternatives --install /usr/bin/python python /usr/bin/python3 10 && \
                update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10 && \
                python3 -m pip install --upgrade pip setuptools wheel mock pytest pytest-xdist pytest-timeout junitparser

          
          - name: "Install h5py"
            run: |
              python -m pip install h5py

          - name: "Install MUSIC"
            run: |
              chmod +x build_support/install_music.sh
              ./build_support/install_music.sh

          - name: "Install SIONlib"
            run: |
              chmod +x build_support/install_sionlib.sh
              ./build_support/install_sionlib.sh

          - name: "Install LibNeurosim â€“ WARNING WARNING NO PROPER PYTHON INSTALL!"
            run: |
              chmod +x build_support/install_csa-libneurosim.sh
              PYLIB_DIR="$(python3 -c "import sysconfig; print(sysconfig.get_path('include'))" | sed 's/include/lib/')"
              ./build_support/install_csa-libneurosim.sh $PYLIB_DIR

          - name: "Build NEST"
            shell: bash -l {0}
            run: |
              mkdir -pv build
              mkdir -pv install
              cd build
              cmake -DCMAKE_INSTALL_PREFIX=../install ..
              make VERBOSE=1
              make install
              . ../install/bin/nest_vars.sh
              python -c "import nest; nest.help();"             
       
          - name: "Test-build documentation with NEST installed"
            shell: bash -l {0}
            run: |
              . install/bin/nest_vars.sh
              cd doc/htmldoc
              sphinx-build . ../_build/html -b html |& tee sphinx-output.log
    
          - name: Upload artifacts
            uses: actions/upload-artifact@v3
            with:
              name: "Full_doc_output_with images"
              path: |
                doc/htmldoc/sphinx-output.log
                doc/_build/html/
    